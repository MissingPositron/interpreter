//fibonacci yeee

int n = 35
print n + "\n"

int fn[3]
fn[0] = 1
fn[1] = 1

int i
for(i = 2; i < n; i++) {
	fn[i % 3] = fn[(i - 1) % 3] + fn[(i - 2) % 3]
}

print fn[(n - 1) % 3] + "\n"

//other tests
int z[20]
int k[20]

(z = k)[6] = 5

print z[6]++ + "\n"
print z[6] + "\n"

print "\n"

print --z[6] + "\n"
print z[6] + "\n"

print((z[6] == k[6]) + ", " + (z == k) + "\n")

//exponentiation by squaring
float base = 10
float exp = -1

float y = 1
if(exp < 0) {
	base = 1 / base
	exp = -exp
}

if(exp != 0) {
	while(exp > 1) {
		if(exp % 2 == 0) {
			base *= base
			exp /= 2
		} else {
			y *= base
			base *= base
			exp = (exp - 1) / 2
		}
	}
	print base * y + "\n"
} else
	print 1 + "\n"


